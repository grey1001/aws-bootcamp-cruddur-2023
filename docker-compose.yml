version: '3.8'

services:
  backend:
    build:
      context: ./backend-flask
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      FLASK_APP: app.py
      FLASK_ENV: production
      BACKEND_URL: "*"
      FRONTEND_URL: "*"
      AWS_XRAY_DAEMON_ADDRESS: "xray-daemon:2000"
    volumes:
      - ./backend-flask:/app
    networks:
      - cruddur-network
    depends_on:
      - xray-daemon

  xray-daemon:
    image: amazon/aws-xray-daemon
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}
      AWS_REGION: eu-west-3
    command:
      - "xray"
      - "-o"
      - "-n"
      - "eu-west-3"
    ports:
      - "2000:2000/udp"
    networks:
      - cruddur-network

  frontend:
    build:
      context: ./frontend-react-js
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_BACKEND_URL: http://backend:5000
    volumes:
      - ./frontend-react-js:/app
    networks:
      - cruddur-network

  dynamodb-local:
    image: amazon/dynamodb-local
    user: root
    ports:
      - "8000:8000"
    volumes:
      - dynamodb-data:/home/dynamodblocal
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb"]
    working_dir: /home/dynamodblocal
    networks:
      - cruddur-network

  db:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cruddr
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - cruddur-network

volumes:
  db-data:
    driver: local
  dynamodb-data:
    driver: local

networks:
  cruddur-network:
    driver: bridge
